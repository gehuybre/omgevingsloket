--- File: /content/drive/MyDrive/Colab Notebooks/Vergunningen/scripts/variables.py ---
# /content/drive/MyDrive/Colab Notebooks/Vergunningen/scripts/variables.py
DATA_FILE = "/content/drive/MyDrive/Colab Notebooks/Vergunningen/data/samenvattende_tabel.csv"
TEMPLATE_FILE = "/content/drive/MyDrive/Colab Notebooks/Vergunningen/template/template.html"
OUTPUT_FILE = "/content/drive/MyDrive/Colab Notebooks/Vergunningen/index.html"
STATIC_DIR = "/content/drive/MyDrive/Colab Notebooks/Vergunningen/static"

GRAPH_VARIABLES = [
    "Nieuwbouw (aantal woongelegenheden)",
    "Verbouwen_or_hergebruik (aantal woongelegenheden)",
    "Sloop (aantal gebouwen)",
    "Aandeel_meergezinswoning"
]

# Placeholder texts for each variable
PLACEHOLDER_TEXTS = {
    "Nieuwbouw (aantal woongelegenheden)": """
        <p>Het aantal vergunningsaanvragen voor nieuwbouw is een voorlopende indicator voor de bouwconjunctuur. Aanvragen voor bouwvergunningen geven een goede indicatie van de bouwactiviteit die we in de komende één tot twee jaar mogen verwachten. De vergunninge vervalt immers wannneer niet start wordt met de werken binnen 2 jaar na het verlenen van de definitieve vergunning.</p>
        <h3>Evolutie op Jaarbasis</h3>
        <p>Als we de evolutie van het aantal vergunningen voor nieuwbouw woongelegenheden op jaarbasis bekijken, zien we een opvallende trend: Na een piek in 2019 met een stijging van 27.63% ten opzichte van 2018, zien we een aanhoudende daling in de daaropvolgende jaren. Vooral in 2023 is er met een daling van 15.23% ten opzichte van 2022 sprake van een significante afname. In 2024 zet de trend zich verder door met een afname van maar liefst 29.32% tot een historisch dieptepunt van 35057.  Deze aanhoudende negatieve trend wijst op een sterke afkoeling van de bouwconjunctuur.</p>
        <h3>Seizoensinvloeden en Kwartaalcijfers</h3>
        <p>Het is een typisch patroon dat in het laatste kwartaal van elk jaar de meeste vergunningen worden aangevraagd. Dit heeft te maken met het feit dat bouwaanvragen die voor het einde van het jaar worden ingediend, vaak nog onder de regelgeving van dat jaar vallen, hetgeen in veel gevallen gunstiger is dan de nieuwe regels die vaak in het daaropvolgende jaar van kracht worden. Dit verklaart de jaarlijkse piek in het vierde kwartaal. Omgekeerd zien we dat het eerste kwartaal van elk jaar doorgaans een stuk minder aanvragen telt.</p>
        <p>De kwartaalcijfers tonen deze trend duidelijk aan. We zien dat Q4 steevast de meeste vergunningen telt, met uitzondering van 2023. Het aantal in Q4 van 2023 ligt hier opvallend laag. In Q1 liggen de aantallen vergunningen doorgaans veel lager.</p>
        <h3>Algemene Trend en Historisch Minimum</h3>
        <p>De algemene trend over de gehele periode is dalend, wat wijst op een afkoeling van de bouwconjunctuur in het segment van de nieuwbouw woongelegenheden. In het laatste jaar van de periode (2024) zitten we op een historisch minimum met de waarden van 35057 vergunningen op jaarbasis. Deze cijfers zijn alarmerend en wijzen op een sterke krimp in de bouwsector.</p>
        <h3>Conclusie</h3>
        <p>De vergunningsaanvragen voor nieuwbouw woongelegenheden zijn een belangrijke graadmeter voor de toekomstige bouwactiviteit. De data laten een duidelijke negatieve trend zien, met een historisch dieptepunt in 2024. Seizoensinvloeden zorgen voor pieken in het vierde kwartaal en dalen in het eerste kwartaal. De aanhoudende daling wijst op een significante afkoeling van de bouwconjunctuur, wat de komende jaren voelbaar zal zijn in de bouwsector.</p>
    """,
    "Verbouwen_or_hergebruik (aantal woongelegenheden)": """<p>Het aantal vergunningsaanvragen voor verbouwingen of hergebruik van bestaande panden is een belangrijke indicator voor de renovatiemarkt. Deze cijfers geven een beeld van de investeringen in het opknappen en aanpassen van de bestaande woningvoorraad.</p>
<h3>Evolutie op Jaarbasis</h3>
<p>De evolutie van het aantal vergunningen voor verbouwingen of hergebruik op jaarbasis toont een wisselend beeld: We zien een aanzienlijke stijging van 19.91% in 2019 ten opzichte van 2018, gevolgd door een verdere toename in 2020 en 2021. In 2022 is er een daling van -9.82%, maar in 2023 zien we weer een stijging van 9.18%. Echter, in 2024 zien we opnieuw een sterke daling van 21.88%. Deze schommelingen wijzen op een minder stabiele markt in vergelijking met de nieuwbouw. De daling van 2024 is in vergelijking met de andere jaren extreem.</p>
<h3>Seizoensinvloeden en Kwartaalcijfers</h3>
<p>Net als bij nieuwbouw zien we ook bij verbouwingen en hergebruik een seizoenspatroon, hoewel dit minder uitgesproken is. Over het algemeen worden er in het laatste kwartaal van het jaar meer vergunningen aangevraagd.</p>
<p>De kwartaalcijfers tonen dit patroon zien: In de meeste jaren zien we een piek in het vierde kwartaal. Echter, deze piek is minder uitgesproken dan bij nieuwbouw.</p>
<h3>Algemene Trend en Schommelingen</h3>
<p>De algemene trend over de gehele periode is licht stijgend, maar met aanzienlijke schommelingen van jaar tot jaar. Dit wijst op een minder voorspelbare markt dan die van de nieuwbouw. De markt voor verbouwingen en hergebruik lijkt gevoeliger te zijn voor economische schommelingen en veranderende regelgeving. Het is aannemelijk dat de extreme daling in 2024 hier ook mee te maken heeft.</p>
<h3>Conclusie</h3>
<p>De vergunningsaanvragen voor verbouwingen en hergebruik tonen een wisselend beeld met aanzienlijke schommelingen. Hoewel er sprake is van een lichte stijging over de gehele periode, is de markt minder stabiel en voorspelbaar dan die van de nieuwbouw. De cijfers laten zien dat de renovatiemarkt een belangrijke rol speelt in de bouwsector, maar dat deze ook gevoeliger is voor externe factoren. De extreme daling in 2024 is hier het bewijs van.</p>""",
    "Sloop (aantal gebouwen)": "Hier komt de uitleg over sloop. Beschrijf de trends en opvallende zaken in de data.",
    "Aandeel_meergezinswoning": "Hier komt de uitleg over het aandeel meergezinswoningen. Beschrijf de trends en opvallende zaken in de data."
}
--- File: /content/drive/MyDrive/Colab Notebooks/Vergunningen/scripts/graph_generator.py ---
# /content/drive/MyDrive/Colab Notebooks/Vergunningen/scripts/graph_generator.py
import plotly.graph_objects as go
from data_handling import preprocess_data

def create_graph(df, variable):
    """Creates a Plotly line graph for the given variable."""
    fig = go.Figure()

    fig.add_trace(go.Scatter(
        x=df['JaarKwartaal'],
        y=df[variable],
        mode='lines+markers',
        name=variable
    ))

    fig.update_layout(
        title=f'{variable}',
        xaxis_title='Jaar Kwartaal',
        yaxis_title=variable,
        template='plotly_white',
        font=dict(family="Arial, sans-serif", size=12, color="#7f7f7f"),
        # Make the background transparent
        paper_bgcolor='rgba(0,0,0,0)',  # Transparent background
        plot_bgcolor='rgba(0,0,0,0)',   # Transparent plot area
    )
    # Remove grid lines
    fig.update_xaxes(showgrid=False)
    fig.update_yaxes(showgrid=False)

    # Convert to HTML, include plotly.js from a CDN, and make it standalone
    graph_html = fig.to_html(full_html=False, include_plotlyjs='cdn')
    return graph_html
--- File: /content/drive/MyDrive/Colab Notebooks/Vergunningen/scripts/data_handling.py ---
import pandas as pd
from variables import DATA_FILE

def load_data():
    """Loads data from the CSV file."""
    df = pd.read_csv(DATA_FILE)
    return df

def preprocess_data(df):
    """Preprocesses the data (combines 'Jaar' and 'Kwartaal')."""
    df['JaarKwartaal'] = df['Jaar'].astype(str) + " " + df['Kwartaal']
    return df
--- File: /content/drive/MyDrive/Colab Notebooks/Vergunningen/scripts/main.py ---
# /content/drive/MyDrive/Colab Notebooks/Vergunningen/scripts/main.py
from variables import TEMPLATE_FILE, OUTPUT_FILE, GRAPH_VARIABLES, TABLE_VARIABLES, STATIC_DIR, PLACEHOLDER_TEXTS
from data_handling import load_data, preprocess_data
from graph_generator import create_graph
from table_generator import create_table
import os

def main():
    """Generates the HTML report."""
    df = load_data()
    df = preprocess_data(df)

    graph_sections = ""
    for var in GRAPH_VARIABLES:
        graph_html = create_graph(df, var)
        table_html = create_table(df, var)
        placeholder_text = PLACEHOLDER_TEXTS.get(var, "")

        graph_sections += f"""
        <section class='parallax'>
            <div class='parallax-content'>
                <h2>{var}</h2>
                <div class='content-grid'>
                    <div class='text-column'>
                        {placeholder_text}
                    </div>
                    <div class='chart-table-column'>
                        <div class='chart'>{graph_html}</div>
                        {table_html}
                    </div>
                </div>
            </div>
        </section>
        """

    # Read the HTML template
    with open(TEMPLATE_FILE, 'r') as f:
        template_html = f.read()

    # Read the CSS file
    css_file = os.path.join(STATIC_DIR, 'styles.css')
    with open(css_file, 'r') as f:
        css_content = f.read()

    # Embed CSS into the template
    output_html = template_html.replace("</head>", f"<style>\n{css_content}\n</style>\n</head>")

    # Insert graph sections into the template
    output_html = output_html.replace("{{GRAPH_SECTIONS}}", graph_sections)

    # Write the output HTML
    with open(OUTPUT_FILE, 'w') as f:
        f.write(output_html)

    print(f"Report generated: {OUTPUT_FILE}")

if __name__ == "__main__":
    main()
--- File: /content/drive/MyDrive/Colab Notebooks/Vergunningen/template/template.html ---
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vergunningen Report</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.min.css">
</head>
<body>
    <header>
        <h1>Hoe evolueerde de bouwconjunctuur in 2024?</h1>
    </header>

    <main>
        {{GRAPH_SECTIONS}}
    </main>

    <footer>
        <p>Embuild Vlaanderen, 2025</p>
    </footer>
</body>
</html>
--- File: /content/drive/MyDrive/Colab Notebooks/Vergunningen/static/styles.css ---
/* /content/drive/MyDrive/Colab Notebooks/Vergunningen/static/styles.css */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    color: #333;
    background-color: #f4f4f4;
}

header {
    background-color: #d3d3d3; /* Light Gray/LightGrey */
    color: #fff;
    text-align: center;
    padding: 20px 0;
}

h1 {
    margin: 0;
    font-size: 2.5em;
}

h2 {
    font-size: 2em;
    margin-top: 0;
}

.parallax {
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    min-height: 100vh;
    position: relative;
    overflow: hidden;
}

.parallax-content {
    background-color: rgba(255, 255, 255, 0.8);
    padding: 20px;
    margin: 50px auto;
    max-width: 1200px; /* Adjusted max-width */
    border-radius: 5px;
    text-align: center;
    position: relative;
    z-index: 2; /* Ensure content is above the parallax image */
}

.parallax:nth-child(1){
    background-color: #ffefd5; /* Light Peach/Papaya Whip */
}
.parallax:nth-child(2){
    background-color: #d9d7f1; /* Light Purple */
}
.parallax:nth-child(3){
    background-color: #a9def9; /* Light Blue */
}
.parallax:nth-child(4){
    background-color: #e4f9f5; /* Light Mint */
}

.chart {
    width: 100%;
    margin: 20px auto;
}

footer {
    background-color: #d3d3d3; /* Light Gray/LightGrey */
    color: #fff;
    text-align: center;
    padding: 10px 0;
    position: fixed;
    bottom: 0;
    width: 100%;
    z-index: 4;
}

/* Table Styling */
.data-table {
    width: 80%;
    margin: 20px auto;
    border-collapse: collapse;
}

.data-table th, .data-table td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: left;
}

.data-table thead {
    background-color: #f0f0f0;
}

.data-table th {
    font-weight: bold;
}

/* Grid layout for content */
.content-grid {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Two equal-width columns */
    gap: 20px; /* Space between columns */
}

.text-column {
    text-align: left; /* Align text to the left */
}

.chart-table-column {
    text-align: center; /* Center the chart and table */
}
--- File: /content/drive/MyDrive/Colab Notebooks/Vergunningen/data/samenvattende_tabel.csv ---
Jaar,Kwartaal,date_time,Nieuwbouw (aantal woongelegenheden),Verbouwen_or_hergebruik (aantal woongelegenheden),Sloop (aantal gebouwen),Aandeel_meergezinswoning
2018,Q1,2018-01-01,7457,4748,2023,0.561
2018,Q2,2018-04-01,14797,7364,3517,0.6129
2018,Q3,2018-07-01,15324,6762,3228,0.6408
2018,Q4,2018-10-01,20225,8070,4398,0.6135
2019,Q1,2019-01-01,14082,6931,3651,0.5911
2019,Q2,2019-04-01,16838,8470,4123,0.589
2019,Q3,2019-07-01,17429,6987,4417,0.6047
2019,Q4,2019-10-01,25427,9921,5665,0.6106
2020,Q1,2020-01-01,11643,8235,4179,0.5636
2020,Q2,2020-04-01,15005,8616,4632,0.5933
2020,Q3,2020-07-01,16362,8810,4724,0.6107
2020,Q4,2020-10-01,22797,10481,6331,0.5711
2021,Q1,2021-01-01,11158,9904,4633,0.4997
2021,Q2,2021-04-01,16335,10557,5698,0.5385
2021,Q3,2021-07-01,15041,8345,4859,0.5683
2021,Q4,2021-10-01,21462,10398,6527,0.5548
2022,Q1,2022-01-01,10426,7569,4238,0.5107
2022,Q2,2022-04-01,14177,9482,5312,0.5467
2022,Q3,2022-07-01,14299,8736,4584,0.5804
2022,Q4,2022-10-01,19611,9567,6039,0.5729
2023,Q1,2023-01-01,9917,9059,4169,0.5472
2023,Q2,2023-04-01,12423,9372,4895,0.5372
2023,Q3,2023-07-01,14937,10229,5102,0.609
2023,Q4,2023-10-01,12323,9941,4755,0.5852
2024,Q1,2024-01-01,10245,8912,4132,0.571
2024,Q2,2024-04-01,10009,9184,4992,0.5457
2024,Q3,2024-07-01,11243,8971,4466,0.5952
2024,Q4,2024-10-01,3560,3089,1416,0.574

--- File: /content/drive/MyDrive/Colab Notebooks/Vergunningen/scripts/table_generator.py ---
# /content/drive/MyDrive/Colab Notebooks/Vergunningen/scripts/table_generator.py
import pandas as pd

def calculate_yty_percentage_change(df, variable):
    """Calculates the year-over-year percentage change for a given variable."""
    df_yearly = df.groupby('Jaar')[variable].sum().reset_index()
    df_yearly[f'{variable}_yty_change'] = df_yearly[variable].pct_change() * 100
    return df_yearly

def create_table(df, variable):
    """Creates an HTML table for the given variable with yearly data and YTY change."""
    df_yearly = calculate_yty_percentage_change(df, variable)

    # Format the percentage change column
    df_yearly[f'{variable}_yty_change'] = df_yearly[f'{variable}_yty_change'].apply(lambda x: f'{x:.2f}%' if pd.notnull(x) else '')

    # Create the HTML table
    table_html = """
    <table class="data-table">
        <thead>
            <tr>
                <th>Year</th>
                <th>{}</th>
                <th>YTY Change</th>
            </tr>
        </thead>
        <tbody>
    """.format(variable)

    for index, row in df_yearly.iterrows():
        table_html += f"""
            <tr>
                <td>{row['Jaar']}</td>
                <td>{row[variable]}</td>
                <td>{row[f'{variable}_yty_change']}</td>
            </tr>
        """

    table_html += """
        </tbody>
    </table>
    """
    return table_html
